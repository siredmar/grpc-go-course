// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalcRequest struct {
	First                int32    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               int32    `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcRequest) Reset()         { *m = CalcRequest{} }
func (m *CalcRequest) String() string { return proto.CompactTextString(m) }
func (*CalcRequest) ProtoMessage()    {}
func (*CalcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{0}
}

func (m *CalcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcRequest.Unmarshal(m, b)
}
func (m *CalcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcRequest.Marshal(b, m, deterministic)
}
func (m *CalcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcRequest.Merge(m, src)
}
func (m *CalcRequest) XXX_Size() int {
	return xxx_messageInfo_CalcRequest.Size(m)
}
func (m *CalcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalcRequest proto.InternalMessageInfo

func (m *CalcRequest) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *CalcRequest) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type CalcResponse struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcResponse) Reset()         { *m = CalcResponse{} }
func (m *CalcResponse) String() string { return proto.CompactTextString(m) }
func (*CalcResponse) ProtoMessage()    {}
func (*CalcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{1}
}

func (m *CalcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcResponse.Unmarshal(m, b)
}
func (m *CalcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcResponse.Marshal(b, m, deterministic)
}
func (m *CalcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcResponse.Merge(m, src)
}
func (m *CalcResponse) XXX_Size() int {
	return xxx_messageInfo_CalcResponse.Size(m)
}
func (m *CalcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcResponse proto.InternalMessageInfo

func (m *CalcResponse) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type PrimeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeRequest) Reset()         { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()    {}
func (*PrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{2}
}

func (m *PrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeRequest.Unmarshal(m, b)
}
func (m *PrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeRequest.Merge(m, src)
}
func (m *PrimeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeRequest.Size(m)
}
func (m *PrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeRequest proto.InternalMessageInfo

func (m *PrimeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeResponse struct {
	PrimeFactor          int32    `protobuf:"varint,2,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResponse) Reset()         { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()    {}
func (*PrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{3}
}

func (m *PrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResponse.Unmarshal(m, b)
}
func (m *PrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResponse.Merge(m, src)
}
func (m *PrimeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeResponse.Size(m)
}
func (m *PrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResponse proto.InternalMessageInfo

func (m *PrimeResponse) GetPrimeFactor() int32 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

func init() {
	proto.RegisterType((*CalcRequest)(nil), "calc.CalcRequest")
	proto.RegisterType((*CalcResponse)(nil), "calc.CalcResponse")
	proto.RegisterType((*PrimeRequest)(nil), "calc.PrimeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "calc.PrimeResponse")
}

func init() { proto.RegisterFile("calculator/calcpb/calc.proto", fileDescriptor_cfc74e58bc0fa04b) }

var fileDescriptor_cfc74e58bc0fa04b = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x5d, 0xdb, 0x0d, 0x32, 0x5d, 0x41, 0x47, 0x29, 0xa5, 0x78, 0xa8, 0x39, 0x88, 0xa7,
	0x55, 0xaa, 0x37, 0x6f, 0x0a, 0x9e, 0xa5, 0xde, 0xbc, 0x48, 0x36, 0xa6, 0x50, 0x48, 0x36, 0x31,
	0x7f, 0xbe, 0xbf, 0x24, 0x99, 0xc2, 0x7a, 0xda, 0x99, 0xdf, 0xce, 0x7b, 0x2f, 0x33, 0x70, 0x23,
	0x85, 0x96, 0x49, 0x8b, 0x68, 0xfd, 0x43, 0x2e, 0xdd, 0x50, 0x3e, 0xbd, 0xf3, 0x36, 0x5a, 0x9c,
	0xe7, 0x9a, 0xbf, 0xc0, 0xe2, 0x4d, 0x68, 0xb9, 0x53, 0xbf, 0x49, 0x85, 0x88, 0xd7, 0xd0, 0xee,
	0x0f, 0x3e, 0xc4, 0x55, 0xb3, 0x69, 0xee, 0xdb, 0x5d, 0x6d, 0x70, 0x09, 0x2c, 0x28, 0x69, 0xc7,
	0x9f, 0xd5, 0x69, 0xc1, 0xd4, 0xf1, 0x0d, 0x74, 0x55, 0x1c, 0x9c, 0x1d, 0x83, 0xc2, 0x0b, 0x98,
	0x85, 0x64, 0x48, 0x9b, 0x4b, 0x7e, 0x07, 0xdd, 0x87, 0x3f, 0x18, 0x75, 0xf4, 0x5f, 0x02, 0x1b,
	0x93, 0x19, 0x94, 0xa7, 0x21, 0xea, 0xf8, 0x16, 0xce, 0x69, 0x8e, 0xac, 0x6e, 0xa1, 0x73, 0x19,
	0x7c, 0xef, 0x85, 0x8c, 0xd6, 0x53, 0xf0, 0xa2, 0xb0, 0xf7, 0x82, 0xb6, 0x1a, 0xe6, 0x39, 0x1d,
	0x7b, 0x98, 0x7d, 0x26, 0x83, 0x97, 0x7d, 0x59, 0x6e, 0xb2, 0xcd, 0x1a, 0xa7, 0xa8, 0x1a, 0xf3,
	0x13, 0x7c, 0x86, 0xb6, 0x64, 0x21, 0xfd, 0x9e, 0x3e, 0x70, 0x7d, 0xf5, 0x8f, 0x1d, 0x35, 0x8f,
	0xcd, 0xeb, 0xd9, 0x17, 0xab, 0x37, 0x1c, 0x58, 0xb9, 0xdf, 0xd3, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x83, 0x03, 0x90, 0xf9, 0x5f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcClient is the client API for Calc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcClient interface {
	Sum(ctx context.Context, in *CalcRequest, opts ...grpc.CallOption) (*CalcResponse, error)
	Prime(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calc_PrimeClient, error)
}

type calcClient struct {
	cc *grpc.ClientConn
}

func NewCalcClient(cc *grpc.ClientConn) CalcClient {
	return &calcClient{cc}
}

func (c *calcClient) Sum(ctx context.Context, in *CalcRequest, opts ...grpc.CallOption) (*CalcResponse, error) {
	out := new(CalcResponse)
	err := c.cc.Invoke(ctx, "/calc.Calc/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcClient) Prime(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calc_PrimeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calc_serviceDesc.Streams[0], "/calc.Calc/Prime", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcPrimeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Calc_PrimeClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type calcPrimeClient struct {
	grpc.ClientStream
}

func (x *calcPrimeClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalcServer is the server API for Calc service.
type CalcServer interface {
	Sum(context.Context, *CalcRequest) (*CalcResponse, error)
	Prime(*PrimeRequest, Calc_PrimeServer) error
}

// UnimplementedCalcServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServer struct {
}

func (*UnimplementedCalcServer) Sum(ctx context.Context, req *CalcRequest) (*CalcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalcServer) Prime(req *PrimeRequest, srv Calc_PrimeServer) error {
	return status.Errorf(codes.Unimplemented, "method Prime not implemented")
}

func RegisterCalcServer(s *grpc.Server, srv CalcServer) {
	s.RegisterService(&_Calc_serviceDesc, srv)
}

func _Calc_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calc/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Sum(ctx, req.(*CalcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calc_Prime_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalcServer).Prime(m, &calcPrimeServer{stream})
}

type Calc_PrimeServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type calcPrimeServer struct {
	grpc.ServerStream
}

func (x *calcPrimeServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Calc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.Calc",
	HandlerType: (*CalcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Calc_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Prime",
			Handler:       _Calc_Prime_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calcpb/calc.proto",
}
